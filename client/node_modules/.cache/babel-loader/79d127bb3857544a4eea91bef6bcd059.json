{"ast":null,"code":"var _jsxFileName = \"/app/src/components/compvis3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as NGL from 'ngl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compvis3 = props => {\n  _s();\n\n  useEffect(() => {\n    const stage = new NGL.Stage(\"viewport\");\n    window.addEventListener(\"resize\", function (event) {\n      stage.handleResize();\n    }, false);\n\n    function addElement(el) {\n      Object.assign(el.style, {\n        position: 'absolute',\n        zIndex: 10\n      });\n      stage.viewer.container.appendChild(el);\n    }\n\n    function createElement(name, properties, style) {\n      var el = document.createElement(name);\n      Object.assign(el, properties);\n      Object.assign(el.style, style);\n      return el;\n    }\n\n    function createSelect(options, properties, style) {\n      var select = createElement('select', properties, style);\n      options.forEach(function (d) {\n        select.add(createElement('option', {\n          value: d[0],\n          text: d[1]\n        }));\n      });\n      return select;\n    }\n\n    function createFileButton(label, properties, style) {\n      var input = createElement('input', Object.assign({\n        type: 'file'\n      }, properties), {\n        display: 'none'\n      });\n      addElement(input);\n      var button = createElement('input', {\n        value: label,\n        type: 'button',\n        onclick: function () {\n          input.click();\n        }\n      }, style);\n      return button;\n    }\n\n    var topPosition = 60;\n\n    function getTopPosition(increment) {\n      if (increment) topPosition += increment;\n      return topPosition + 'px';\n    }\n\n    var tooltip = document.createElement('div');\n    Object.assign(tooltip.style, {\n      display: 'none',\n      position: 'fixed',\n      zIndex: 10,\n      pointerEvents: 'none',\n      backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\n      color: 'lightgrey',\n      padding: '8px',\n      fontFamily: 'sans-serif'\n    });\n    document.body.appendChild(tooltip); // remove default hoverPick mouse action\n\n    stage.mouseControls.remove('hoverPick'); // listen to `hovered` signal to move tooltip around and change its text\n\n    stage.signals.hovered.add(function (pickingProxy) {\n      if (cartoonCheckbox.checked === true || customCheckbox.checked === true) {\n        if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)) {\n          var atom = pickingProxy.atom || pickingProxy.closestBondAtom;\n          const csvRow = residueData[atom.resno];\n\n          if (csvRow !== undefined) {\n            const wtProb = parseFloat(csvRow[csvWtProbCol]);\n            const prProb = parseFloat(csvRow[csvPrProbCol]);\n            tooltip.innerHTML = `\n            RESNO: ${atom.resno}<br/>\n            WT AA: ${atom.resname}<br/>\n            WT PROB: ${wtProb.toFixed(4)}<br/>\n            PRED AA: ${csvRow[csvPrAaCol]}<br/>\n            PRED PROB: ${prProb.toFixed(4)}<br/>\n            LOG2 P/W: ${Math.log2(prProb / wtProb).toFixed(4)}`;\n            tooltip.style.bottom = stage.viewer.height - 80 + 'px';\n            tooltip.style.left = stage.viewer.width - 170 + 'px';\n            tooltip.style.display = 'block';\n          } else {\n            tooltip.style.display = 'none';\n          }\n        }\n      }\n    });\n    var ligandSele = '( not polymer or not ( protein or nucleic ) ) and not ( water or ACE or NH2 )';\n    var pocketRadius = 0;\n    var pocketRadiusClipFactor = 1;\n    var cartoonRepr, neighborRepr, ligandRepr, waterRepr, contactRepr, pocketRepr, labelRepr, customRepr;\n    var struc;\n    var csv;\n    var residueData;\n    var heatMap;\n    var customPercent;\n    var neighborSele;\n    var sidechainAttached = false;\n    var loadStrucFile, loadCsvFile;\n    const csvResNumCol = 4;\n    const csvWtProbCol = 7;\n    const csvPrAaCol = 6;\n    const csvPrProbCol = 8;\n\n    function loadStructure(proteinFile, csvFile) {\n      struc = undefined;\n      stage.setFocus(0);\n      stage.removeAllComponents();\n      ligandSelect.innerHTML = '';\n      clipNearRange.value = 0;\n      clipRadiusRange.value = 10;\n      pocketOpacityRange.value = 30;\n      cartoonCheckbox.checked = true;\n      customCheckbox.checked = false;\n      sidechainAttachedCheckbox.checked = false;\n      waterIonCheckbox.checked = false;\n      hydrophobicCheckbox.checked = false;\n      hydrogenBondCheckbox.checked = false;\n      weakHydrogenBondCheckbox.checked = false;\n      waterHydrogenBondCheckbox.checked = false;\n      backboneHydrogenBondCheckbox.checked = false;\n      halogenBondCheckbox.checked = true;\n      metalInteractionCheckbox.checked = true;\n      saltBridgeCheckbox.checked = true;\n      cationPiCheckbox.checked = true;\n      piStackingCheckbox.checked = true;\n      return Promise.all([stage.loadFile(proteinFile\n      /*, { defaultRepresentation: true }*/\n      ), NGL.autoLoad(csvFile, {\n        ext: 'csv',\n        delimiter: ',',\n        comment: '#',\n        columnNames: true\n      })]).then(function (ol) {\n        struc = ol[0];\n        csv = ol[1].data;\n        setLigandOptions();\n        setChainOptions();\n        setResidueOptions();\n        residueData = {};\n\n        for (var i = 0; i < csv.length; i++) {\n          const resNum = parseFloat(csv[i][csvResNumCol]);\n          residueData[resNum] = csv[i];\n        }\n\n        heatMap = NGL.ColormakerRegistry.addScheme(function (params) {\n          this.parameters = Object.assign(this.parameters, {\n            domain: [0, 0.40],\n            scale: 'rwb',\n            mode: 'rgb'\n          });\n          var scale = this.getScale();\n\n          this.atomColor = function (atom) {\n            const csvRow = residueData[atom.resno];\n\n            if (atom.isNucleic()) {\n              return 0x004e00;\n            }\n\n            if (csvRow !== undefined) {\n              const wtProb = parseFloat(csvRow[csvWtProbCol]);\n              return scale(wtProb);\n            } else {\n              return 0xcccccc;\n            }\n          };\n        });\n        customPercent = NGL.ColormakerRegistry.addScheme(function (params) {\n          this.atomColor = function (atom) {\n            for (var i = 0; i < csv.length; i++) {\n              const csvRow = residueData[atom.resno];\n\n              if (atom.isNucleic()) {\n                return 0x004e00;\n              }\n\n              if (csvRow !== undefined) {\n                const wtProb = parseFloat(csvRow[csvWtProbCol]); //const predProb = parseFloat(csvRow[csvPrProbCol])\n\n                if (wtProb < 0.01) {\n                  return 0xF800080; // purple\n                } else if (wtProb < 0.03) {\n                  return 0xFF0000; // red\n                } else if (wtProb < 0.05) {\n                  return 0xFFA500; // orange\n                } else if (wtProb < 0.10) {\n                  return 0xFFFF00; // yellow \n                } else {\n                  return 0xFFFFFF; // white\n                }\n              }\n            }\n          };\n        });\n        struc.autoView();\n        cartoonRepr = struc.addRepresentation('cartoon', {\n          color: heatMap,\n          visible: true\n        });\n        customRepr = struc.addRepresentation('cartoon', {\n          color: customPercent,\n          visible: false\n        });\n        neighborRepr = struc.addRepresentation('ball+stick', {\n          sele: 'none',\n          aspectRatio: 1.1,\n          colorValue: 'lightgrey',\n          multipleBond: 'symmetric',\n          //changed opacity for Hong\n          opacity: 0.7\n        });\n        ligandRepr = struc.addRepresentation('ball+stick', {\n          multipleBond: 'symmetric',\n          colorValue: 'grey',\n          sele: 'none',\n          aspectRatio: 1.2,\n          radiusScale: 2.5\n        });\n        waterRepr = struc.addRepresentation('ball+stick', {\n          name: 'waterIon',\n          visible: waterIonCheckbox.checked,\n          sele: 'water or ion',\n          aspectRatio: 1.1\n        });\n        contactRepr = struc.addRepresentation('contact', {\n          sele: 'none',\n          radiusSize: 0.07,\n          weakHydrogenBond: false,\n          waterHydrogenBond: false,\n          backboneHydrogenBond: false,\n          hydrogenBond: false\n        });\n        pocketRepr = struc.addRepresentation('surface', {\n          sele: 'none',\n          lazy: true,\n          visibility: true,\n          clipNear: 0,\n          opaqueBack: false,\n          opacity: 0.3,\n          // clipRadius: 0.1,\n          color: heatMap,\n          roughness: 1.0,\n          surfaceType: 'av'\n        });\n        labelRepr = struc.addRepresentation('label', {\n          sele: 'none',\n          color: '#111111',\n          yOffset: 0.2,\n          zOffset: 2.0,\n          attachment: 'bottom-center',\n          showBorder: true,\n          borderColor: 'lightgrey',\n          borderWidth: 0.5,\n          disablePicking: true,\n          radiusType: 'size',\n          radiusSize: 1.5,\n          labelType: 'residue',\n          labelGrouping: 'residue'\n        });\n      }).catch(failure);\n    } // ERROR HANDLING -- specifically for mutcompute version (including above catch)\n\n\n    function failure(error) {\n      console.error(error);\n\n      if (window.confirm('Sorry, this data does not exist. Please run your desired protein through the neural net first.')) {//window.location.href = 'https://mutcompute.com';\n      }\n    }\n\n    function setLigandOptions() {\n      ligandSelect.innerHTML = '';\n      var options = [['', 'select ligand']];\n      struc.structure.eachResidue(function (rp) {\n        if (rp.isWater()) return;\n        var sele = '';\n        if (rp.resno !== undefined) sele += rp.resno;\n        if (rp.inscode) sele += '^' + rp.inscode;\n        if (rp.chain) sele += ':' + rp.chainname;\n        var name = (rp.resname ? '[' + rp.resname + ']' : '') + sele;\n        if (rp.entity && rp.entity.description) name += ' (' + rp.entity.description + ')';\n        options.push([sele, name]);\n      }, new NGL.Selection(ligandSele));\n      options.forEach(function (d) {\n        ligandSelect.add(createElement('option', {\n          value: d[0],\n          text: d[1]\n        }));\n      });\n    }\n\n    function setChainOptions() {\n      chainSelect.innerHTML = '';\n      var options = [['', 'select chain']];\n      struc.structure.eachChain(function (cp) {\n        var name = cp.chainname;\n        if (cp.entity && cp.entity.description) name += ' (' + cp.entity.description + ')';\n        options.push([cp.chainname, name]);\n      }, new NGL.Selection('polymer'));\n      options.forEach(function (d) {\n        chainSelect.add(createElement('option', {\n          value: d[0],\n          text: d[1]\n        }));\n      });\n    }\n\n    function setResidueOptions(chain) {\n      residueSelect.innerHTML = '';\n      var options = [['', 'select residue']];\n\n      if (chain) {\n        struc.structure.eachResidue(function (rp) {\n          var sele = '';\n          if (rp.resno !== undefined) sele += rp.resno;\n          if (rp.inscode) sele += '^' + rp.inscode;\n          if (rp.chain) sele += ':' + rp.chainname;\n          var name = (rp.resname ? '[' + rp.resname + ']' : '') + sele;\n          options.push([sele, name]);\n        }, new NGL.Selection('polymer and :' + chain));\n      }\n\n      options.forEach(function (d) {\n        residueSelect.add(createElement('option', {\n          value: d[0],\n          text: d[1]\n        }));\n      });\n    }\n\n    var loadStructureButton = createFileButton('Load Structure', {\n      accept: '.pdb,.cif,.ent,.gz,.mol2',\n      onchange: function (e) {\n        if (e.target.files[0]) {\n          loadStrucFile = e.target.files[0];\n        }\n\n        if (loadCsvFile) {\n          loadStructure(loadStrucFile, loadCsvFile);\n          loadCsvFile = '';\n          loadStrucFile = '';\n        }\n      }\n    }, {\n      top: getTopPosition(),\n      left: '12px'\n    });\n    addElement(loadStructureButton);\n    var loadCsvButton = createFileButton('Load csv', {\n      accept: '.csv',\n      onchange: function (e) {\n        if (e.target.files[0]) {\n          loadCsvFile = e.target.files[0];\n        }\n\n        if (loadStrucFile) {\n          loadStructure(loadStrucFile, loadCsvFile);\n          loadCsvFile = '';\n          loadStrucFile = '';\n        }\n      }\n    }, {\n      top: getTopPosition(30),\n      left: '12px'\n    });\n    addElement(loadCsvButton); // More useful for mutcompute\n\n    var loadPdbidInput = createElement('input', {\n      type: 'text',\n      placeholder: 'Enter pdbID',\n      onkeypress: function (e) {\n        if (e.keyCode === 13) {\n          var inputValue = e.target.value.toLowerCase(); // str.slice(0, 4)\n\n          var proteinInput = '/data/' + inputValue + '.pdb';\n          var csvInput = '/data/' + inputValue + '.csv';\n          e.preventDefault();\n          loadStructure(proteinInput, csvInput);\n        }\n      }\n    }, {\n      top: getTopPosition(30),\n      left: '12px',\n      width: '120px'\n    });\n    addElement(loadPdbidInput);\n\n    function showFull() {\n      ligandSelect.value = '';\n      ligandRepr.setVisibility(false);\n      neighborRepr.setVisibility(false);\n      contactRepr.setVisibility(false);\n      pocketRepr.setVisibility(false);\n      labelRepr.setVisibility(false);\n      struc.autoView(2000);\n    }\n\n    function showLigand(sele) {\n      var s = struc.structure; // Hong -- changes b+s radius , 9 => 30+\n\n      var withinSele = s.getAtomSetWithinSelection(new NGL.Selection(sele), 12);\n      var withinGroup = s.getAtomSetWithinGroup(withinSele);\n      var expandedSele = withinGroup.toSeleString();\n      neighborSele = '(' + expandedSele + ') and not (' + sele + ')';\n      neighborSele = expandedSele;\n      var sview = s.getView(new NGL.Selection(sele)); // Hong -- changes surface repr 100 for full struc\n\n      pocketRadius = Math.max(sview.boundingBox.getSize(new NGL.Vector3()).length(), 2) + 10;\n      var withinSele2 = s.getAtomSetWithinSelection(new NGL.Selection(sele), pocketRadius + 2);\n      var neighborSele2 = '(' + withinSele2.toSeleString() + ') and not (' + sele + ') and polymer';\n      ligandRepr.setVisibility(true);\n      neighborRepr.setVisibility(true);\n      contactRepr.setVisibility(true);\n      pocketRepr.setVisibility(true);\n      labelRepr.setVisibility(false);\n      ligandRepr.setSelection(sele); //and not (water or ion) removes water/ions \n\n      neighborRepr.setSelection(!sidechainAttached ? '(' + neighborSele + ') and (sidechainAttached or not polymer) and not (water or ion)' : neighborSele);\n      waterRepr.setSelection(expandedSele);\n      contactRepr.setSelection(expandedSele);\n      pocketRepr.setSelection(neighborSele2);\n      pocketRepr.setParameters({\n        clipRadius: pocketRadius * pocketRadiusClipFactor,\n        clipCenter: sview.center\n      }); //ignores water or ion for pocket coloring\n\n      labelRepr.setSelection('(' + neighborSele + ') and not (water or ion)');\n      struc.autoView(expandedSele, 2000);\n    }\n\n    function showRegion(sele) {\n      var s = struc.structure;\n      ligandSelect.value = '';\n      var withinSele = s.getAtomSetWithinSelection(new NGL.Selection(sele), 5);\n      var withinGroup = s.getAtomSetWithinGroup(withinSele);\n      var expandedSele = withinGroup.toSeleString();\n      neighborSele = '(' + expandedSele + ') and not (' + sele + ')';\n      neighborSele = expandedSele;\n      ligandRepr.setVisibility(false);\n      neighborRepr.setVisibility(false);\n      contactRepr.setVisibility(false);\n      pocketRepr.setVisibility(false);\n      labelRepr.setVisibility(false);\n      struc.autoView(expandedSele, 2000);\n    }\n\n    var ligandSelect = createSelect([], {\n      onchange: function (e) {\n        residueSelect.value = '';\n        var sele = e.target.value;\n\n        if (!sele) {\n          showFull();\n        } else {\n          showLigand(sele);\n        }\n      }\n    }, {\n      top: getTopPosition(35),\n      left: '12px',\n      width: '130px'\n    });\n    addElement(ligandSelect);\n    var chainSelect = createSelect([], {\n      onchange: function (e) {\n        ligandSelect.value = '';\n        residueSelect.value = '';\n        setResidueOptions(e.target.value);\n      }\n    }, {\n      top: getTopPosition(25),\n      left: '12px',\n      width: '130px'\n    });\n    addElement(chainSelect);\n    var residueSelect = createSelect([], {\n      onchange: function (e) {\n        ligandSelect.value = '';\n        var sele = e.target.value;\n\n        if (!sele) {\n          showFull();\n        } else {\n          showLigand(sele);\n        }\n      }\n    }, {\n      top: getTopPosition(25),\n      left: '12px',\n      width: '130px'\n    });\n    addElement(residueSelect); // remove default clicking\n\n    stage.mouseControls.remove('clickPick-left'); // onclick residue select and show ligandrepr\n\n    let prevSele = '';\n    stage.signals.clicked.add(function (pickingProxy) {\n      let sele = '';\n\n      if (pickingProxy && !pickingProxy.bond) {\n        if (pickingProxy.atom) {\n          sele += (pickingProxy.closestBondAtom || pickingProxy.atom.resno) + ':' + (pickingProxy.closestBondAtom || pickingProxy.atom.chainname);\n        }\n      } // if (pickingProxy && pickingProxy.atom && !pickingProxy.bond) {\n      //   sele += (pickingProxy.closestBondAtom || pickingProxy.atom.resno)\n      // } \n      // if (pickingProxy && !pickingProxy.bond && pickingProxy.atom.chainname) {\n      //   sele += ':' + (pickingProxy.closestBondAtom || pickingProxy.atom.chainname)\n      //   console.log(sele)\n      // }\n\n\n      if (sele && sele !== prevSele) {\n        showLigand(sele);\n        prevSele = sele;\n        residueSelect.value = '';\n      } else if (prevSele === sele) {\n        showRegion(sele);\n        prevSele = '';\n        residueSelect.value = '';\n      } else {\n        sele = '';\n        prevSele = '';\n        showFull();\n      }\n    });\n    addElement(createElement('span', {\n      innerText: 'pocket near clipping'\n    }, {\n      top: getTopPosition(30),\n      left: '12px',\n      color: 'grey'\n    }));\n    var clipNearRange = createElement('input', {\n      type: 'range',\n      value: 0,\n      min: 0,\n      max: 10000,\n      step: 1\n    }, {\n      top: getTopPosition(16),\n      left: '12px'\n    });\n\n    clipNearRange.oninput = function (e) {\n      var sceneRadius = stage.viewer.boundingBox.getSize(new NGL.Vector3()).length() / 2;\n      var f = pocketRadius / sceneRadius;\n      var v = parseFloat(e.target.value) / 10000; // must be between 0 and 1\n\n      var c = 0.5 - f / 2 + v * f;\n      pocketRepr.setParameters({\n        clipNear: c * 100 // must be between 0 and 100\n\n      });\n    };\n\n    addElement(clipNearRange);\n    addElement(createElement('span', {\n      innerText: 'pocket radius clipping'\n    }, {\n      top: getTopPosition(25),\n      left: '12px',\n      color: 'grey'\n    }));\n    var clipRadiusRange = createElement('input', {\n      type: 'range',\n      value: 100,\n      min: 1,\n      max: 100,\n      step: 1\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n\n    clipRadiusRange.oninput = function (e) {\n      pocketRadiusClipFactor = parseFloat(e.target.value) / 100;\n      pocketRepr.setParameters({\n        clipRadius: pocketRadius * pocketRadiusClipFactor\n      });\n    };\n\n    addElement(clipRadiusRange);\n    addElement(createElement('span', {\n      innerText: 'pocket opacity'\n    }, {\n      top: getTopPosition(25),\n      left: '12px',\n      color: 'grey'\n    }));\n    var pocketOpacityRange = createElement('input', {\n      type: 'range',\n      value: 30,\n      min: 0,\n      max: 100,\n      step: 1\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n\n    pocketOpacityRange.oninput = function (e) {\n      pocketRepr.setParameters({\n        opacity: parseFloat(e.target.value) / 100\n      });\n    };\n\n    addElement(pocketOpacityRange);\n    var cartoonCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        cartoonRepr.setVisibility(e.target.checked);\n      }\n    }, {\n      top: getTopPosition(30),\n      left: '12px'\n    });\n    addElement(cartoonCheckbox);\n    addElement(createElement('span', {\n      innerText: 'Heat Map'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var customCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        customRepr.setVisibility(e.target.checked);\n        e.target.checked ? pocketRepr.setParameters({\n          color: customPercent\n        }) : pocketRepr.setParameters({\n          color: heatMap\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(customCheckbox);\n    addElement(createElement('span', {\n      innerText: 'Custom'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var sidechainAttachedCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        sidechainAttached = e.target.checked;\n        neighborRepr.setSelection(!sidechainAttached ? '(' + neighborSele + ') and (sidechainAttached or not polymer)' : neighborSele);\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(sidechainAttachedCheckbox);\n    addElement(createElement('span', {\n      innerText: 'sidechain'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var waterIonCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        stage.getRepresentationsByName('waterIon').setVisibility(e.target.checked);\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(waterIonCheckbox);\n    addElement(createElement('span', {\n      innerText: 'Water Ion'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var labelCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        labelRepr.setVisibility(e.target.checked);\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(labelCheckbox);\n    addElement(createElement('span', {\n      innerText: 'label'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var hydrophobicCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          hydrophobic: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(30),\n      left: '12px'\n    });\n    addElement(hydrophobicCheckbox);\n    addElement(createElement('span', {\n      innerText: 'hydrophobic'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var hydrogenBondCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          hydrogenBond: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(hydrogenBondCheckbox);\n    addElement(createElement('span', {\n      innerText: 'hbond'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var weakHydrogenBondCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          weakHydrogenBond: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(weakHydrogenBondCheckbox);\n    addElement(createElement('span', {\n      innerText: 'weak hbond'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var waterHydrogenBondCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          waterHydrogenBond: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(waterHydrogenBondCheckbox);\n    addElement(createElement('span', {\n      innerText: 'water-water hbond'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var backboneHydrogenBondCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: false,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          backboneHydrogenBond: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(backboneHydrogenBondCheckbox);\n    addElement(createElement('span', {\n      innerText: 'backbone-backbone hbond'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var halogenBondCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          halogenBond: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(halogenBondCheckbox);\n    addElement(createElement('span', {\n      innerText: 'halogen bond'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var metalInteractionCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          metalComplex: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(metalInteractionCheckbox);\n    addElement(createElement('span', {\n      innerText: 'metal interaction'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var saltBridgeCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          saltBridge: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(saltBridgeCheckbox);\n    addElement(createElement('span', {\n      innerText: 'salt bridge'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var cationPiCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          cationPi: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(cationPiCheckbox);\n    addElement(createElement('span', {\n      innerText: 'cation-pi'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    var piStackingCheckbox = createElement('input', {\n      type: 'checkbox',\n      checked: true,\n      onchange: function (e) {\n        contactRepr.setParameters({\n          piStacking: e.target.checked\n        });\n      }\n    }, {\n      top: getTopPosition(20),\n      left: '12px'\n    });\n    addElement(piStackingCheckbox);\n    addElement(createElement('span', {\n      innerText: 'pi-stacking'\n    }, {\n      top: getTopPosition(),\n      left: '32px',\n      color: 'grey'\n    }));\n    loadStructure('/data/6ij6.pdb', '/data/6ij6.csv');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"viewport\",\n    style: {\n      height: '90vh',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 772,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Compvis3, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Compvis3;\nexport default Compvis3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compvis3\");","map":{"version":3,"sources":["/app/src/components/compvis3.js"],"names":["React","useEffect","NGL","Compvis3","props","stage","Stage","window","addEventListener","event","handleResize","addElement","el","Object","assign","style","position","zIndex","viewer","container","appendChild","createElement","name","properties","document","createSelect","options","select","forEach","d","add","value","text","createFileButton","label","input","type","display","button","onclick","click","topPosition","getTopPosition","increment","tooltip","pointerEvents","backgroundColor","color","padding","fontFamily","body","mouseControls","remove","signals","hovered","pickingProxy","cartoonCheckbox","checked","customCheckbox","atom","bond","closestBondAtom","csvRow","residueData","resno","undefined","wtProb","parseFloat","csvWtProbCol","prProb","csvPrProbCol","innerHTML","resname","toFixed","csvPrAaCol","Math","log2","bottom","height","left","width","ligandSele","pocketRadius","pocketRadiusClipFactor","cartoonRepr","neighborRepr","ligandRepr","waterRepr","contactRepr","pocketRepr","labelRepr","customRepr","struc","csv","heatMap","customPercent","neighborSele","sidechainAttached","loadStrucFile","loadCsvFile","csvResNumCol","loadStructure","proteinFile","csvFile","setFocus","removeAllComponents","ligandSelect","clipNearRange","clipRadiusRange","pocketOpacityRange","sidechainAttachedCheckbox","waterIonCheckbox","hydrophobicCheckbox","hydrogenBondCheckbox","weakHydrogenBondCheckbox","waterHydrogenBondCheckbox","backboneHydrogenBondCheckbox","halogenBondCheckbox","metalInteractionCheckbox","saltBridgeCheckbox","cationPiCheckbox","piStackingCheckbox","Promise","all","loadFile","autoLoad","ext","delimiter","comment","columnNames","then","ol","data","setLigandOptions","setChainOptions","setResidueOptions","i","length","resNum","ColormakerRegistry","addScheme","params","parameters","domain","scale","mode","getScale","atomColor","isNucleic","autoView","addRepresentation","visible","sele","aspectRatio","colorValue","multipleBond","opacity","radiusScale","radiusSize","weakHydrogenBond","waterHydrogenBond","backboneHydrogenBond","hydrogenBond","lazy","visibility","clipNear","opaqueBack","roughness","surfaceType","yOffset","zOffset","attachment","showBorder","borderColor","borderWidth","disablePicking","radiusType","labelType","labelGrouping","catch","failure","error","console","confirm","structure","eachResidue","rp","isWater","inscode","chain","chainname","entity","description","push","Selection","chainSelect","eachChain","cp","residueSelect","loadStructureButton","accept","onchange","e","target","files","top","loadCsvButton","loadPdbidInput","placeholder","onkeypress","keyCode","inputValue","toLowerCase","proteinInput","csvInput","preventDefault","showFull","setVisibility","showLigand","s","withinSele","getAtomSetWithinSelection","withinGroup","getAtomSetWithinGroup","expandedSele","toSeleString","sview","getView","max","boundingBox","getSize","Vector3","withinSele2","neighborSele2","setSelection","setParameters","clipRadius","clipCenter","center","showRegion","prevSele","clicked","innerText","min","step","oninput","sceneRadius","f","v","c","getRepresentationsByName","labelCheckbox","hydrophobic","halogenBond","metalComplex","saltBridge","cationPi","piStacking"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as NGL from 'ngl';\n\nconst Compvis3 = (props) => {\n    useEffect (() => {\n\n        const stage = new NGL.Stage( \"viewport\" );\n\n        window.addEventListener( \"resize\", function( event ){\n            stage.handleResize();\n        }, false );\n\n\n    function addElement (el) {\n        Object.assign(el.style, {\n          position: 'absolute',\n          zIndex: 10\n        })\n        stage.viewer.container.appendChild(el)\n      }\n\n      function createElement (name, properties, style) {\n        var el = document.createElement(name)\n        Object.assign(el, properties)\n        Object.assign(el.style, style)\n        return el\n      }\n\n      function createSelect (options, properties, style) {\n        var select = createElement('select', properties, style)\n        options.forEach(function (d) {\n          select.add(createElement('option', {\n            value: d[0], text: d[1]\n          }))\n        })\n        return select\n      }\n\n      function createFileButton (label, properties, style) {\n        var input = createElement('input', Object.assign({\n          type: 'file'\n        }, properties), { display: 'none' })\n        addElement(input)\n        var button = createElement('input', {\n          value: label,\n          type: 'button',\n          onclick: function () { input.click() }\n        }, style)\n        return button\n      }\n\n      var topPosition = 60\n\n      function getTopPosition (increment) {\n        if (increment) topPosition += increment\n        return topPosition + 'px'\n      }\n  \n      var tooltip = document.createElement('div')\n      Object.assign(tooltip.style, {\n        display: 'none',\n        position: 'fixed',\n        zIndex: 10,\n        pointerEvents: 'none',\n        backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\n        color: 'lightgrey',\n        padding: '8px',\n        fontFamily: 'sans-serif'\n      })\n      document.body.appendChild(tooltip)\n\n      // remove default hoverPick mouse action\n      stage.mouseControls.remove('hoverPick')\n      // listen to `hovered` signal to move tooltip around and change its text\n      stage.signals.hovered.add(function (pickingProxy) {\n        if (cartoonCheckbox.checked === true || customCheckbox.checked === true) {\n          if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)) {\n            var atom = pickingProxy.atom || pickingProxy.closestBondAtom\n            const csvRow = residueData[atom.resno]\n            if (csvRow !== undefined) {\n              const wtProb = parseFloat(csvRow[csvWtProbCol])\n              const prProb = parseFloat(csvRow[csvPrProbCol])\n              tooltip.innerHTML = `\n            RESNO: ${atom.resno}<br/>\n            WT AA: ${atom.resname}<br/>\n            WT PROB: ${wtProb.toFixed(4)}<br/>\n            PRED AA: ${csvRow[csvPrAaCol]}<br/>\n            PRED PROB: ${prProb.toFixed(4)}<br/>\n            LOG2 P/W: ${Math.log2(prProb/wtProb).toFixed(4)}`\n              tooltip.style.bottom = stage.viewer.height - 80 + 'px'\n              tooltip.style.left = stage.viewer.width - 170 + 'px'\n              tooltip.style.display = 'block'\n            } else {\n              tooltip.style.display = 'none'\n            }\n          }\n        }\n      })\n\n\n      var ligandSele = '( not polymer or not ( protein or nucleic ) ) and not ( water or ACE or NH2 )'\n\n      var pocketRadius = 0\n      var pocketRadiusClipFactor = 1\n\n      var cartoonRepr, neighborRepr, ligandRepr, waterRepr, contactRepr, pocketRepr, labelRepr, customRepr\n\n      var struc\n      var csv\n      var residueData\n\n      var heatMap\n      var customPercent\n\n      var neighborSele\n      var sidechainAttached = false\n\n      var loadStrucFile, loadCsvFile\n\n      const csvResNumCol = 4\n      const csvWtProbCol = 7\n      const csvPrAaCol = 6\n      const csvPrProbCol = 8\n\n      function loadStructure (proteinFile, csvFile) {\n        struc = undefined\n        stage.setFocus(0)\n        stage.removeAllComponents()\n        ligandSelect.innerHTML = ''\n        clipNearRange.value = 0\n        clipRadiusRange.value = 10\n        pocketOpacityRange.value = 30\n        cartoonCheckbox.checked = true\n        customCheckbox.checked = false\n        sidechainAttachedCheckbox.checked = false\n        waterIonCheckbox.checked = false\n        hydrophobicCheckbox.checked = false\n        hydrogenBondCheckbox.checked = false\n        weakHydrogenBondCheckbox.checked = false\n        waterHydrogenBondCheckbox.checked = false\n        backboneHydrogenBondCheckbox.checked = false\n        halogenBondCheckbox.checked = true\n        metalInteractionCheckbox.checked = true\n        saltBridgeCheckbox.checked = true\n        cationPiCheckbox.checked = true\n        piStackingCheckbox.checked = true\n        return Promise.all([\n          stage.loadFile(proteinFile /*, { defaultRepresentation: true }*/),\n          NGL.autoLoad(csvFile, {\n            ext: 'csv',\n            delimiter: ',',\n            comment: '#',\n            columnNames: true\n          })\n        ]).then(function (ol) {\n          struc = ol[0]\n          csv = ol[1].data\n        \n          setLigandOptions()\n          setChainOptions()\n          setResidueOptions()\n        \n          residueData = {}\n          for (var i = 0; i < csv.length; i++) {\n            const resNum = parseFloat(csv[i][csvResNumCol])\n            residueData[resNum] = csv[i]\n          }\n      \n          heatMap = NGL.ColormakerRegistry.addScheme(function (params) {\n            this.parameters = Object.assign(this.parameters, {\n              domain: [0, 0.40],\n              scale: 'rwb',\n              mode: 'rgb'\n            })\n            var scale = this.getScale()\n            this.atomColor = function (atom) {\n              const csvRow = residueData[atom.resno]\n              if (atom.isNucleic()) {\n                return 0x004e00\n              }\n              if (csvRow !== undefined) {\n                const wtProb = parseFloat(csvRow[csvWtProbCol])\n                return scale(wtProb)\n              } else {\n                return 0xcccccc\n              }\n            }\n          })\n      \n          customPercent = NGL.ColormakerRegistry.addScheme(function (params) {\n            this.atomColor = function (atom) {\n              for (var i = 0; i < csv.length; i++) {\n                const csvRow = residueData[atom.resno]\n            \n                if (atom.isNucleic()) {\n                  return 0x004e00\n                }\n                if (csvRow !== undefined) {\n                  const wtProb = parseFloat(csvRow[csvWtProbCol])\n                  //const predProb = parseFloat(csvRow[csvPrProbCol])\n                  if (wtProb < 0.01 ) {\n                    return 0xF800080// purple\n                  } else if (wtProb < 0.03) {\n                    return 0xFF0000 // red\n                  } else if (wtProb < 0.05) {\n                    return 0xFFA500 // orange\n                  } else if (wtProb < 0.10) {\n                    return 0xFFFF00 // yellow \n                  } else {\n                    return 0xFFFFFF // white\n                  }\n                }\n              }\n            }\n          })\n      \n          struc.autoView()\n          cartoonRepr = struc.addRepresentation('cartoon', {\n            color: heatMap,\n            visible: true\n          })\n          customRepr = struc.addRepresentation('cartoon', {\n            color: customPercent,\n            visible: false\n          })\n          neighborRepr = struc.addRepresentation('ball+stick', {\n            sele: 'none',\n            aspectRatio: 1.1,\n            colorValue: 'lightgrey',\n            multipleBond: 'symmetric',\n            //changed opacity for Hong\n            opacity: 0.7\n          })\n          ligandRepr = struc.addRepresentation('ball+stick', {\n            multipleBond: 'symmetric',\n            colorValue: 'grey',\n            sele: 'none',\n            aspectRatio: 1.2,\n            radiusScale: 2.5\n          })\n          waterRepr = struc.addRepresentation('ball+stick', {\n            name: 'waterIon',\n            visible: waterIonCheckbox.checked,\n            sele: 'water or ion',\n            aspectRatio: 1.1,\n          })\n          contactRepr = struc.addRepresentation('contact', {\n            sele: 'none',\n            radiusSize: 0.07,\n            weakHydrogenBond: false,\n            waterHydrogenBond: false,\n            backboneHydrogenBond: false,\n            hydrogenBond: false\n          })\n          pocketRepr = struc.addRepresentation('surface', {\n            sele: 'none',\n            lazy: true,\n            visibility: true,\n            clipNear: 0,\n            opaqueBack: false,\n            opacity: 0.3,\n            // clipRadius: 0.1,\n            color: heatMap,\n            roughness: 1.0,\n            surfaceType: 'av'\n          })\n          labelRepr = struc.addRepresentation('label', {\n            sele: 'none',\n            color: '#111111',\n            yOffset: 0.2,\n            zOffset: 2.0,\n            attachment: 'bottom-center',\n            showBorder: true,\n            borderColor: 'lightgrey',\n            borderWidth: 0.5,\n            disablePicking: true,\n            radiusType: 'size',\n            radiusSize: 1.5,\n            labelType: 'residue',\n            labelGrouping: 'residue'\n          })\n        })\n        .catch(failure)\n      }\n\n      // ERROR HANDLING -- specifically for mutcompute version (including above catch)\n      function failure (error) {\n        console.error(error)\n        if (window.confirm('Sorry, this data does not exist. Please run your desired protein through the neural net first.')) {\n          //window.location.href = 'https://mutcompute.com';\n        }\n      }\n\n      function setLigandOptions () {\n        ligandSelect.innerHTML = ''\n        var options = [['', 'select ligand']]\n        struc.structure.eachResidue(function (rp) {\n          if (rp.isWater()) return\n          var sele = ''\n          if (rp.resno !== undefined) sele += rp.resno\n          if (rp.inscode) sele += '^' + rp.inscode\n          if (rp.chain) sele += ':' + rp.chainname\n          var name = (rp.resname ? '[' + rp.resname + ']' : '') + sele\n          if (rp.entity && rp.entity.description) name += ' (' + rp.entity.description + ')'\n          options.push([sele, name])\n        }, new NGL.Selection(ligandSele))\n        options.forEach(function (d) {\n          ligandSelect.add(createElement('option', {\n            value: d[0], text: d[1]\n          }))\n        })\n      }\n\n      function setChainOptions () {\n        chainSelect.innerHTML = ''\n        var options = [['', 'select chain']]\n        struc.structure.eachChain(function (cp) {\n          var name = cp.chainname\n          if (cp.entity && cp.entity.description) name += ' (' + cp.entity.description + ')'\n          options.push([cp.chainname, name])\n        }, new NGL.Selection('polymer'))\n        options.forEach(function (d) {\n          chainSelect.add(createElement('option', {\n            value: d[0], text: d[1]\n          }))\n        })\n      }\n\n      function setResidueOptions (chain) {\n        residueSelect.innerHTML = ''\n        var options = [['', 'select residue']]\n        if (chain) {\n          struc.structure.eachResidue(function (rp) {\n            var sele = ''\n            if (rp.resno !== undefined) sele += rp.resno\n            if (rp.inscode) sele += '^' + rp.inscode\n            if (rp.chain) sele += ':' + rp.chainname\n            var name = (rp.resname ? '[' + rp.resname + ']' : '') + sele\n            options.push([sele, name])\n          }, new NGL.Selection('polymer and :' + chain))\n        }\n        options.forEach(function (d) {\n          residueSelect.add(createElement('option', {\n            value: d[0], text: d[1]\n          }))\n        })\n      } \n\n      var loadStructureButton = createFileButton('Load Structure', {\n        accept: '.pdb,.cif,.ent,.gz,.mol2',\n        onchange: function (e) {\n          if (e.target.files[0]) {\n            loadStrucFile = e.target.files[0]\n          }\n          if (loadCsvFile) {\n            loadStructure(loadStrucFile, loadCsvFile)\n            loadCsvFile = ''\n            loadStrucFile = ''\n          }\n        }\n      }, { top: getTopPosition(), left: '12px' })\n      addElement(loadStructureButton)   \n\n      var loadCsvButton = createFileButton('Load csv', {\n        accept: '.csv',\n        onchange: function (e) {\n          if (e.target.files[0]) {\n            loadCsvFile = e.target.files[0]\n          }\n          if (loadStrucFile) {\n            loadStructure(loadStrucFile, loadCsvFile)\n            loadCsvFile = ''\n            loadStrucFile = ''\n          }\n        }\n      }, { top: getTopPosition(30), left: '12px' })\n      addElement(loadCsvButton) \n\n      // More useful for mutcompute\n      var loadPdbidInput = createElement('input', {\n        type: 'text',\n        placeholder: 'Enter pdbID',\n        onkeypress: function (e) {\n          if (e.keyCode === 13) {\n            var inputValue = e.target.value.toLowerCase()\n            // str.slice(0, 4)\n            var proteinInput = '/data/' + inputValue + '.pdb'\n            var csvInput = '/data/' + inputValue + '.csv'\n            e.preventDefault()\n            loadStructure(proteinInput, csvInput)\n          }\n        }\n      }, { top: getTopPosition(30), left: '12px', width: '120px' })\n      addElement(loadPdbidInput)    \n\n      function showFull () {\n        ligandSelect.value = '' \n\n        ligandRepr.setVisibility(false)\n        neighborRepr.setVisibility(false)\n        contactRepr.setVisibility(false)\n        pocketRepr.setVisibility(false)\n        labelRepr.setVisibility(false)  \n\n        struc.autoView(2000)\n      } \n\n      function showLigand (sele) {\n        var s = struc.structure \n\n        // Hong -- changes b+s radius , 9 => 30+\n        var withinSele = s.getAtomSetWithinSelection(new NGL.Selection(sele), 12)\n        var withinGroup = s.getAtomSetWithinGroup(withinSele)\n        var expandedSele = withinGroup.toSeleString()\n        neighborSele = '(' + expandedSele + ') and not (' + sele + ')'\n        neighborSele = expandedSele \n\n        var sview = s.getView(new NGL.Selection(sele))\n        // Hong -- changes surface repr 100 for full struc\n        pocketRadius = Math.max(sview.boundingBox.getSize(new NGL.Vector3()).length(), 2) + 10\n        var withinSele2 = s.getAtomSetWithinSelection(new NGL.Selection(sele), pocketRadius + 2)\n        var neighborSele2 = '(' + withinSele2.toSeleString() + ') and not (' + sele + ') and polymer'   \n\n        ligandRepr.setVisibility(true)\n        neighborRepr.setVisibility(true)\n        contactRepr.setVisibility(true)\n        pocketRepr.setVisibility(true)\n        labelRepr.setVisibility(false)  \n\n        ligandRepr.setSelection(sele)\n        //and not (water or ion) removes water/ions \n        neighborRepr.setSelection(\n          !sidechainAttached ? '(' + neighborSele + ') and (sidechainAttached or not polymer) and not (water or ion)' : neighborSele\n        )\n        waterRepr.setSelection(expandedSele)\n        contactRepr.setSelection(expandedSele)\n        pocketRepr.setSelection(neighborSele2)\n        pocketRepr.setParameters({\n          clipRadius: pocketRadius * pocketRadiusClipFactor,\n          clipCenter: sview.center\n        })\n        //ignores water or ion for pocket coloring\n        labelRepr.setSelection('(' + neighborSele + ') and not (water or ion)') \n\n        struc.autoView(expandedSele, 2000)\n      } \n\n      function showRegion (sele) {\n        var s = struc.structure\n        ligandSelect.value = '' \n\n        var withinSele = s.getAtomSetWithinSelection(new NGL.Selection(sele), 5)\n        var withinGroup = s.getAtomSetWithinGroup(withinSele)\n        var expandedSele = withinGroup.toSeleString()\n        neighborSele = '(' + expandedSele + ') and not (' + sele + ')'\n        neighborSele = expandedSele \n\n        ligandRepr.setVisibility(false)\n        neighborRepr.setVisibility(false)\n        contactRepr.setVisibility(false)\n        pocketRepr.setVisibility(false)\n        labelRepr.setVisibility(false)  \n\n        struc.autoView(expandedSele, 2000)\n      } \n\n      var ligandSelect = createSelect([], {\n        onchange: function (e) {\n          residueSelect.value = ''\n          var sele = e.target.value\n          if (!sele) {\n            showFull()\n          } else {\n            showLigand(sele)\n          }\n        }\n      }, { top: getTopPosition(35), left: '12px', width: '130px' })\n      addElement(ligandSelect)  \n\n      var chainSelect = createSelect([], {\n        onchange: function (e) {\n          ligandSelect.value = ''\n          residueSelect.value = ''\n          setResidueOptions(e.target.value)\n        }\n      }, { top: getTopPosition(25), left: '12px', width: '130px' })\n      addElement(chainSelect)   \n\n      var residueSelect = createSelect([], {\n        onchange: function (e) {\n          ligandSelect.value = ''\n          var sele = e.target.value\n          if (!sele) {\n            showFull()\n          } else {\n            showLigand(sele)\n          }\n        }\n      }, { top: getTopPosition(25), left: '12px', width: '130px' })\n      addElement(residueSelect) \n\n      // remove default clicking\n      stage.mouseControls.remove('clickPick-left')  \n      // onclick residue select and show ligandrepr\n      let prevSele = ''\n      stage.signals.clicked.add(function (pickingProxy) {\n        let sele = ''\n        if (pickingProxy && !pickingProxy.bond) {\n          if (pickingProxy.atom) {\n            sele += (pickingProxy.closestBondAtom || pickingProxy.atom.resno) + ':' + ((pickingProxy.closestBondAtom || pickingProxy.atom.chainname))\n          }\n        } \n        \n        // if (pickingProxy && pickingProxy.atom && !pickingProxy.bond) {\n        //   sele += (pickingProxy.closestBondAtom || pickingProxy.atom.resno)\n        // } \n        // if (pickingProxy && !pickingProxy.bond && pickingProxy.atom.chainname) {\n        //   sele += ':' + (pickingProxy.closestBondAtom || pickingProxy.atom.chainname)\n        //   console.log(sele)\n        // }\n        if (sele && sele !== prevSele) {\n          showLigand(sele)\n          prevSele = sele\n          residueSelect.value = ''\n        } else if (prevSele === sele) {\n          showRegion(sele)\n          prevSele = ''\n          residueSelect.value = ''\n        } else {\n          sele = ''\n          prevSele = ''\n          showFull()\n        }\n        \n      })      \n\n\n      addElement(createElement('span', {\n        innerText: 'pocket near clipping'\n      }, { top: getTopPosition(30), left: '12px', color: 'grey' }))\n      var clipNearRange = createElement('input', {\n        type: 'range', value: 0, min: 0, max: 10000, step: 1\n      }, { top: getTopPosition(16), left: '12px' })\n      clipNearRange.oninput = function (e) {\n        var sceneRadius = stage.viewer.boundingBox.getSize(new NGL.Vector3()).length() / 2  \n\n        var f = pocketRadius / sceneRadius\n        var v = parseFloat(e.target.value) / 10000 // must be between 0 and 1\n        var c = 0.5 - f / 2 + v * f \n\n        pocketRepr.setParameters({\n          clipNear: c * 100 // must be between 0 and 100\n        })\n      }\n      addElement(clipNearRange) \n\n      addElement(createElement('span', {\n        innerText: 'pocket radius clipping'\n      }, { top: getTopPosition(25), left: '12px', color: 'grey' }))\n      var clipRadiusRange = createElement('input', {\n        type: 'range', value: 100, min: 1, max: 100, step: 1\n      }, { top: getTopPosition(20), left: '12px' })\n      clipRadiusRange.oninput = function (e) {\n        pocketRadiusClipFactor = parseFloat(e.target.value) / 100\n        pocketRepr.setParameters({ clipRadius: pocketRadius * pocketRadiusClipFactor })\n      }\n      addElement(clipRadiusRange)   \n\n      addElement(createElement('span', {\n        innerText: 'pocket opacity'\n      }, { top: getTopPosition(25), left: '12px', color: 'grey' }))\n      var pocketOpacityRange = createElement('input', {\n        type: 'range', value: 30, min: 0, max: 100, step: 1\n      }, { top: getTopPosition(20), left: '12px' })\n      pocketOpacityRange.oninput = function (e) {\n        pocketRepr.setParameters({\n          opacity: parseFloat(e.target.value) / 100\n        })\n      }\n      addElement(pocketOpacityRange)    \n\n      var cartoonCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          cartoonRepr.setVisibility(e.target.checked)\n        }\n      }, { top: getTopPosition(30), left: '12px' })\n      addElement(cartoonCheckbox)\n      addElement(createElement('span', {\n        innerText: 'Heat Map'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var customCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          customRepr.setVisibility(e.target.checked)\n          e.target.checked? pocketRepr.setParameters({color: customPercent}) : pocketRepr.setParameters({color: heatMap})\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(customCheckbox)\n      addElement(createElement('span', {\n        innerText: 'Custom'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var sidechainAttachedCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          sidechainAttached = e.target.checked\n          neighborRepr.setSelection(\n            !sidechainAttached ? '(' + neighborSele + ') and (sidechainAttached or not polymer)' : neighborSele\n          )\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(sidechainAttachedCheckbox)\n      addElement(createElement('span', {\n        innerText: 'sidechain'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var waterIonCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          stage.getRepresentationsByName('waterIon')\n          .setVisibility(e.target.checked)\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(waterIonCheckbox)\n      addElement(createElement('span', {\n        innerText: 'Water Ion'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))\n\n      var labelCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          labelRepr.setVisibility(e.target.checked)\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(labelCheckbox)\n      addElement(createElement('span', {\n        innerText: 'label'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var hydrophobicCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          contactRepr.setParameters({ hydrophobic: e.target.checked })\n        }\n      }, { top: getTopPosition(30), left: '12px' })\n      addElement(hydrophobicCheckbox)\n      addElement(createElement('span', {\n        innerText: 'hydrophobic'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var hydrogenBondCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ hydrogenBond: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(hydrogenBondCheckbox)\n      addElement(createElement('span', {\n        innerText: 'hbond'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var weakHydrogenBondCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          contactRepr.setParameters({ weakHydrogenBond: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(weakHydrogenBondCheckbox)\n      addElement(createElement('span', {\n        innerText: 'weak hbond'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var waterHydrogenBondCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          contactRepr.setParameters({ waterHydrogenBond: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(waterHydrogenBondCheckbox)\n      addElement(createElement('span', {\n        innerText: 'water-water hbond'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var backboneHydrogenBondCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: false,\n        onchange: function (e) {\n          contactRepr.setParameters({ backboneHydrogenBond: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(backboneHydrogenBondCheckbox)\n      addElement(createElement('span', {\n        innerText: 'backbone-backbone hbond'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var halogenBondCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ halogenBond: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(halogenBondCheckbox)\n      addElement(createElement('span', {\n        innerText: 'halogen bond'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var metalInteractionCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ metalComplex: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(metalInteractionCheckbox)\n      addElement(createElement('span', {\n        innerText: 'metal interaction'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var saltBridgeCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ saltBridge: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(saltBridgeCheckbox)\n      addElement(createElement('span', {\n        innerText: 'salt bridge'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var cationPiCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ cationPi: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(cationPiCheckbox)\n      addElement(createElement('span', {\n        innerText: 'cation-pi'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      var piStackingCheckbox = createElement('input', {\n        type: 'checkbox',\n        checked: true,\n        onchange: function (e) {\n          contactRepr.setParameters({ piStacking: e.target.checked })\n        }\n      }, { top: getTopPosition(20), left: '12px' })\n      addElement(piStackingCheckbox)\n      addElement(createElement('span', {\n        innerText: 'pi-stacking'\n      }, { top: getTopPosition(), left: '32px', color: 'grey' }))   \n\n      loadStructure('/data/6ij6.pdb', '/data/6ij6.csv')\n  \n      }, []);\n\n  return (\n      <div id=\"viewport\" style={{height: '90vh', width: '100%'}} >\n\n      </div>\n  )\n}\n\nexport default Compvis3\n  \n  "]},"metadata":{},"sourceType":"module"}