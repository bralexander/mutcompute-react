{"ast":null,"code":"var _jsxFileName = \"/app/src/components/resetPass.js\",\n    _s = $RefreshSig$();\n\nimport '../assets/css/login.css';\nimport { useHistory } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst passwordValidator = value => {\n  let validLength = value.trim().length >= 8;\n  let hasNumber = /\\d/.test(value);\n  let upperCase = value.toLowerCase() !== value;\n  let lowerCase = value.toUpperCase() !== value;\n  let specialChar = /[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(value);\n\n  if (validLength && hasNumber && upperCase && lowerCase && specialChar) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst match = (value1, value2) => {\n  if (value1 === value2) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst Reset = props => {\n  _s();\n\n  const history = useHistory();\n  const hash = props.match.params.hash;\n  const {\n    value: password1,\n    valid: password1Valid,\n    hasError: password1Error,\n    valueChangeHandler: password1Change,\n    inputBlurHandler: password1Blur\n  } = useInput(value => passwordValidator(value));\n  const {\n    value: password2,\n    valid: password2Valid,\n    hasError: password2Error,\n    valueChangeHandler: password2Change,\n    inputBlurHandler: password2Blur\n  } = useInput(value => match(password1, value));\n  let validForm = false;\n\n  if (password1Valid && password2Valid) {\n    validForm = true;\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    fetch(`/api/reset/${hash}`, {\n      method: 'post',\n      url: '/reset',\n      body: JSON.stringify(password1),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(r => r.json()).then(data => {\n      console.log(data);\n      alert(`Password reset for: ${Object.values(data)}`);\n      history.push('/login');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"form-signin\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h3 mb-3 fw-normal\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password1\",\n          className: \"form-control\",\n          placeholder: \"New Password\",\n          onChange: password1Change,\n          onBlur: password1Blur,\n          value: password1,\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), password1Error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please use a strong password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password 2\",\n          className: \"form-control\",\n          placeholder: \"Confirm New Password\",\n          onChange: password2Change,\n          onBlur: password2Blur,\n          value: password2,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), password2Error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Passwords do not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-100 btn btn-lg btn-primary\",\n          type: \"submit\",\n          onClick: submitHandler,\n          disabled: !validForm,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reset, \"tXwxA+J7GCI9vFKf2l/YSbyA6JQ=\", false, function () {\n  return [useHistory, useInput, useInput];\n});\n\n_c = Reset;\nexport default _c2 = withRouter(Reset);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reset\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/app/src/components/resetPass.js"],"names":["useHistory","withRouter","useInput","passwordValidator","value","validLength","trim","length","hasNumber","test","upperCase","toLowerCase","lowerCase","toUpperCase","specialChar","match","value1","value2","Reset","props","history","hash","params","password1","valid","password1Valid","hasError","password1Error","valueChangeHandler","password1Change","inputBlurHandler","password1Blur","password2","password2Valid","password2Error","password2Change","password2Blur","validForm","submitHandler","e","preventDefault","fetch","method","url","body","JSON","stringify","headers","then","r","json","data","console","log","alert","Object","values","push"],"mappings":"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","sourcesContent":["import '../assets/css/login.css'\nimport { useHistory } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport useInput from '../hooks/useInput'\n\n\nconst passwordValidator = (value) => {\n        let validLength  = value.trim().length >= 8\n        let hasNumber =  /\\d/.test(value)\n        let upperCase =  value.toLowerCase() !== value\n        let lowerCase =  value.toUpperCase() !== value\n        let specialChar =  /[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(value)\n        if (validLength && hasNumber && upperCase && lowerCase && specialChar) {\n            return true\n        } else { \n            return false\n        }\n    }\nconst match = (value1, value2) => {\n  if (value1 === value2) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst Reset = (props) => {\n  const history = useHistory();\n  const hash  = props.match.params.hash\n  \n  const {\n    value: password1,\n    valid: password1Valid,\n    hasError: password1Error,\n    valueChangeHandler: password1Change,\n    inputBlurHandler: password1Blur\n  } = useInput((value) => passwordValidator(value))\n\n  const {\n    value: password2,\n    valid: password2Valid,\n    hasError: password2Error,\n    valueChangeHandler: password2Change,\n    inputBlurHandler: password2Blur\n  } = useInput((value) => match(password1, value))\n\n\n  let validForm = false\n    if (password1Valid && password2Valid) {\n      validForm = true\n    }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    fetch(`/api/reset/${hash}`, {\n      method: 'post',\n      url: '/reset',\n      body: JSON.stringify(password1),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(r => r.json())\n    .then(data => {\n      console.log(data)\n      alert(`Password reset for: ${Object.values(data)}`)\n      history.push('/login')\n    })\n    }\n  \n  \n  return (\n    \n        <div className=\"login text-center\">  \n          <main className=\"form-signin\">\n            <form >\n              {/* <img className=\"mb-4\" src=\"/docs/5.0/assets/brand/bootstrap-logo.svg\" alt=\"\" width=\"72\" height=\"57\" /> */}\n              <h1 className=\"h3 mb-3 fw-normal\">Reset Password</h1>\n              <input \n              type=\"password\" \n              id=\"password1\" \n              className=\"form-control\" \n              placeholder=\"New Password\" \n              onChange = {password1Change}\n              onBlur = {password1Blur}\n              value= {password1}              \n              required autoFocus \n              />\n              {password1Error && (<p>Please use a strong password</p>)}\n              <input \n              type=\"password\" \n              id=\"password 2\" \n              className=\"form-control\" \n              placeholder=\"Confirm New Password\"\n              onChange = {password2Change}\n              onBlur = {password2Blur}\n              value= {password2}\n              required \n              />\n              {password2Error && (<p>Passwords do not match</p>)}\n              <button \n              className=\"w-100 btn btn-lg btn-primary\" \n              type=\"submit\" \n              onClick={submitHandler}\n              disabled = {!validForm}\n              >Reset</button>\n            </form>\n          </main>\n        </div>\n  )\n}\n\nexport default withRouter(Reset)"]},"metadata":{},"sourceType":"module"}